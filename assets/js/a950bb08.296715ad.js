"use strict";(self.webpackChunkPikiwiDB_Pika_=self.webpackChunkPikiwiDB_Pika_||[]).push([[2978],{702:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var i=r(4848),s=r(8453);const t={title:"Pika \u8bfb\u5199\u6d41\u7a0b\u7b80\u4ecb",sidebar_position:1},o=void 0,d={id:"\u8bbe\u8ba1\u4e0e\u5b9e\u73b0/Pika \u4f20\u706b\u8ba1\u5212/\u8bfb\u5199\u6d41\u7a0b/index",title:"Pika \u8bfb\u5199\u6d41\u7a0b\u7b80\u4ecb",description:"alt text",source:"@site/docs/\u8bbe\u8ba1\u4e0e\u5b9e\u73b0/Pika \u4f20\u706b\u8ba1\u5212/\u8bfb\u5199\u6d41\u7a0b/index.md",sourceDirName:"\u8bbe\u8ba1\u4e0e\u5b9e\u73b0/Pika \u4f20\u706b\u8ba1\u5212/\u8bfb\u5199\u6d41\u7a0b",slug:"/\u8bbe\u8ba1\u4e0e\u5b9e\u73b0/Pika \u4f20\u706b\u8ba1\u5212/\u8bfb\u5199\u6d41\u7a0b/",permalink:"/docs/\u8bbe\u8ba1\u4e0e\u5b9e\u73b0/Pika \u4f20\u706b\u8ba1\u5212/\u8bfb\u5199\u6d41\u7a0b/",draft:!1,unlisted:!1,editUrl:"https://github.com/OpenAtomFoundation/PikiwiDB-Pika--Website/tree/main/docs/\u8bbe\u8ba1\u4e0e\u5b9e\u73b0/Pika \u4f20\u706b\u8ba1\u5212/\u8bfb\u5199\u6d41\u7a0b/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Pika \u8bfb\u5199\u6d41\u7a0b\u7b80\u4ecb",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Pika \u7ebf\u7a0b\u6a21\u578b\u7b80\u4ecb",permalink:"/docs/\u8bbe\u8ba1\u4e0e\u5b9e\u73b0/Pika \u4f20\u706b\u8ba1\u5212/\u7ebf\u7a0b\u6a21\u578b/"},next:{title:"Pika \u4e3b\u4ece\u540c\u6bd4",permalink:"/docs/\u8bbe\u8ba1\u4e0e\u5b9e\u73b0/Pika \u4f20\u706b\u8ba1\u5212/\u4e3b\u4ece\u540c\u6b65/"}},a={},c=[{value:"Introduction",id:"introduction",level:2},{value:"PikaClientConn\u548cCmd\u901a\u7528\u5904\u7406\u6d41\u7a0b",id:"pikaclientconn\u548ccmd\u901a\u7528\u5904\u7406\u6d41\u7a0b",level:2},{value:"WorkerThread \u5904\u7406\u6d41\u7a0b",id:"workerthread-\u5904\u7406\u6d41\u7a0b",level:3},{value:"ThreadPoolThread \u5904\u7406\u6d41\u7a0b",id:"threadpoolthread-\u5904\u7406\u6d41\u7a0b",level:2},{value:"Cmd \u901a\u7528\u5904\u7406\u6d41\u7a0b",id:"cmd-\u901a\u7528\u5904\u7406\u6d41\u7a0b",level:2},{value:"DoCommand",id:"docommand",level:3},{value:"DoBinlog",id:"dobinlog",level:3},{value:"\u547d\u4ee4\u6267\u884c\u8fc7\u7a0b\u7684\u5dee\u5f02\u5316\u5904\u7406",id:"\u547d\u4ee4\u6267\u884c\u8fc7\u7a0b\u7684\u5dee\u5f02\u5316\u5904\u7406",level:2},{value:"\u4e00\u81f4\u6027\u5b9e\u73b0\u4e2d\u7684\u6570\u636e\u5199\u5165",id:"\u4e00\u81f4\u6027\u5b9e\u73b0\u4e2d\u7684\u6570\u636e\u5199\u5165",level:2},{value:"Reference",id:"reference",level:2}];function l(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"alt text",src:r(2280).A+"",width:"572",height:"175"})}),"\n",(0,i.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(e.p,{children:"\u901a\u8fc7\u4e0a\u6b21Pika\u7ebf\u7a0b\u6a21\u578b\u7684\u5206\u4eab\uff0c\u5f97\u77e5\u4e3b\u8981\u7684\u547d\u4ee4\u5904\u7406\u662f\u7531\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u8d1f\u8d23\u7684\u3002\u800c\u547d\u4ee4\u7684\u901a\u7528\u5904\u7406\u6d41\u7a0b\u4e3b\u8981\u662f\u7531PikaClientConn\u51b3\u5b9a\u7684\uff0c\u5728\u5176\u5904\u7406\u8fc7\u7a0b\u5f53\u4e2d\u5bf9\u4e8e\u4e0d\u540c\u7684\u547d\u4ee4\uff0c\u901a\u8fc7\u591a\u6001\u7684\u65b9\u5f0f\u8c03class Cmd\u5904\u7406\u63a5\u53e3\uff0c\u52a8\u6001\u9009\u62e9\u4e0d\u540c\u547d\u4ee4\u7684\u5904\u7406\u51fd\u6570\u3002\u8fd9\u91cc\u4e3b\u8981\u68b3\u7406pika\u7684\u4e3b\u8981\u8bfb\u5199\u6d41\u7a0b\u3002"}),"\n",(0,i.jsx)(e.h2,{id:"pikaclientconn\u548ccmd\u901a\u7528\u5904\u7406\u6d41\u7a0b",children:"PikaClientConn\u548cCmd\u901a\u7528\u5904\u7406\u6d41\u7a0b"}),"\n",(0,i.jsx)(e.h3,{id:"workerthread-\u5904\u7406\u6d41\u7a0b",children:"WorkerThread \u5904\u7406\u6d41\u7a0b"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",children:"class PikaClientConn: public pink::RedisConn {\n  void AsynProcessRedisCmds(const std::vector<pink::RedisCmdArgsType>& argvs,\n      std::string* response) override;\n  std::atomic<int> resp_num;\n  std::vector<std::shared_ptr<std::string>> resp_array;\n  std::shared_ptr<Cmd> DoCmd(const PikaCmdArgsType& argv,\n      const std::string& opt,\n      std::shared_ptr<std::string> resp_ptr);\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"Pink\u5c42\u901a\u8fc7AsynProcessRedisCmds\u7684\u8c03\u7528\uff0cPika\u4e0a\u5c42\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u5bf9\u4e8e\u63a5\u53d7\u547d\u4ee4\u540e\u7684\u540e\u7eed\u5904\u7406\u6d41\u7a0b\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",children:"void PikaClientConn::AsynProcessRedisCmds(\n    const std::vector<pink::RedisCmdArgsType>& argvs, std::string* response){\n  BgTaskArg* arg = new BgTaskArg();\n  arg->redis_cmds = argvs;\n  arg->conn_ptr =\n    std::dynamic_pointer_cast<PikaClientConn>(shared_from_this());\n  g_pika_server->ScheduleClientPool(&DoBackgroundTask, arg);\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"1\uff0cworker thread \u8c03\u7528AsynProcessRedisCmds\uff0c\u5c06\u5f85\u5904\u7406Cmd\u5c01\u88c5\u6210BgTaskArg\u3002"}),"\n",(0,i.jsx)(e.p,{children:"2\uff0cBgTaskArg\u4efb\u52a1\u653e\u5165\u7ebf\u7a0b\u6c60\u4e2d\uff0c\u540e\u7eed\u7531\u7ebf\u7a0b\u6c60\u4e2d\u7684\u4e00\u4e2a\u7ebf\u7a0b\u7ee7\u7eed\u5904\u7406\u8fd9\u4e2a\u8bf7\u6c42\u3002"}),"\n",(0,i.jsx)(e.p,{children:"3\uff0cworker thread \u7684\u8c03\u7528\u8fd4\u56de\uff0cworker thread \u7ee7\u7eed\u8fd0\u884c\u81ea\u5df1\u6d41\u7a0b\u3002"}),"\n",(0,i.jsx)(e.h2,{id:"threadpoolthread-\u5904\u7406\u6d41\u7a0b",children:"ThreadPoolThread \u5904\u7406\u6d41\u7a0b"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",children:"void PikaClientConn::DoBackgroundTask(void* arg) {\n  // sanity check\n  // ...\n  BgTaskArg* bg_arg = reinterpret_cast<BgTaskArg*>(arg);\n  std::shared_ptr<PikaClientConn> conn_ptr = bg_arg->conn_ptr;\n  conn_ptr->BatchExecRedisCmd(bg_arg->redis_cmds);\n  delete bg_arg;\n}\n\nvoid PikaClientConn::BatchExecRedisCmd(\n    const std::vector<pink::RedisCmdArgsType>& argvs) {\n  resp_num.store(argvs.size());\n  for (size_t i = 0; i < argvs.size(); ++i) {\n    std::shared_ptr<std::string> resp_ptr = std::make_shared<std::string>();\n    resp_array.push_back(resp_ptr);\n    ExecRedisCmd(argvs[i], resp_ptr);\n  }\n  TryWriteResp();\n}\n\nvoid PikaClientConn::ExecRedisCmd(\n    const PikaCmdArgsType& argv, std::shared_ptr<std::string> resp_ptr) {\n  std::string opt = argv[0];\n  slash::StringToLower(opt);\n  std::shared_ptr<Cmd> cmd_ptr = DoCmd(argv, opt, resp_ptr);\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"1\uff0cThreadPoolThread\u8c03\u7528DoBackgroundTask\uff0c\u68c0\u67e5BgTaskArg \u7684\u5408\u6cd5\u6027\u3002"}),"\n",(0,i.jsx)(e.p,{children:"2\uff0c\u8c03\u7528BatchExecRedisCmd\uff0c\u5728\u6b64\u7ebf\u7a0b\u4e2d\u5bf9\u6240\u6709\u547d\u4ee4\u8fdb\u884c\u9010\u4e00\u5904\u7406\u3002"}),"\n",(0,i.jsx)(e.p,{children:"3\uff0c\u8c03\u7528DoCmd \u8fdb\u884c\u547d\u4ee4\u7684\u5177\u4f53\u5904\u7406\u3002"}),"\n",(0,i.jsx)(e.p,{children:"4\uff0c\u8c03\u7528TryWriteResp \u5bf9\u4e8e\u8fd4\u56de\u7684\u6240\u6709\u7ed3\u679c\u6574\u5408\uff0c\u4e4b\u540e\u901a\u77e5WorkerThread \u8be5PikaClientConn\u5185\u7684\u7ed3\u679c\u53ef\u4ee5\u5199\u56de\u5ba2\u6237\u7aef\u3002"}),"\n",(0,i.jsx)(e.p,{children:"DoCmd\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",children:'std::shared_ptr<Cmd> PikaClientConn::DoCmd(\n    const PikaCmdArgsType& argv,\n    const std::string& opt,\n    std::shared_ptr<std::string> resp_ptr) {\n  std::shared_ptr<Cmd> c_ptr = g_pika_cmd_table_manager->GetCmd(opt);\n  \n  if (!auth_stat_.IsAuthed(c_ptr)) {\n    c_ptr->res().SetRes(CmdRes::kErrOther,"NOAUTH Authentication required.");\n    return c_ptr;\n  }\n  // lock free\n  // slowlog_slower_thann is atomic int\n  if (g_pika_conf->slowlog_slower_than() >= 0) {\n    start_us = slash::NowMicros();\n  }\n  // lock free\n  // HasMonitorClients return atomic bool\n  bool is_monitoring = g_pika_server->HasMonitorClients();\n  if (is_monitoring) {\n    ProcessMonitor(argv);\n  }\n  \n  // Initial\n  c_ptr->Initial(argv, current_table_);\n  if (!c_ptr->res().ok()) {\n    return c_ptr;\n  }\n  // partial lock free\n  // update server statistic lock free\n  // pdateTableQps NOT lock free\n  g_pika_server->UpdateQueryNumAndExecCountTable(\n    current_table_, opt, c_ptr->is_write());\n  // sanity check\n  ... \n  // Process Command\n  c_ptr->Execute();\n\n  if (g_pika_conf->slowlog_slower_than() >= 0) {\n    ProcessSlowlog(argv, start_us);\n  }\n}\n'})}),"\n",(0,i.jsxs)(e.p,{children:["1\uff0c\u6839\u636e\u5177\u4f53\u547d\u4ee4\u751f\u6210\u5176\u57fa\u7c7b\u7684",(0,i.jsx)(e.code,{children:"std::shared_ptr<Cmd>"})," \u65b9\u4fbf\u591a\u6001\u5b9e\u73b0\u3002"]}),"\n",(0,i.jsx)(e.p,{children:"2\uff0c\u5bf9\u4e8e\u8fde\u63a5\u8fdb\u884c\u6743\u9650\u8ba4\u8bc1\uff0c\u5bf9\u5e94\u547d\u4ee4\u53ef\u4ee5\u67e5\u770bRedis Auth\u547d\u4ee4\uff0c\u548cPika\u914d\u7f6e\u6587\u4ef6Pika\u914d\u7f6e\u6587\u4ef6\u8bf4\u660e \u4e2d\u5bf9\u4e8e\u5bc6\u7801\u7684\u76f8\u5173\u914d\u7f6e\u3002"}),"\n",(0,i.jsx)(e.p,{children:"3\uff0c\u5c06\u547d\u4ee4\u653e\u5165monitor\u7ebf\u7a0b\uff0c\u5bf9\u5e94\u547d\u4ee4\u53ef\u4ee5\u67e5\u770bRedis Monitor \u547d\u4ee4\u3002"}),"\n",(0,i.jsx)(e.p,{children:"4\uff0c\u8c03\u7528Cmd::Initial\u3002"}),"\n",(0,i.jsx)(e.p,{children:"5\uff0c\u8c03\u7528Cmd::Execute\u3002"}),"\n",(0,i.jsx)(e.p,{children:"6\uff0c\u5982\u679c\u5f00\u542fSlowlog\uff0c\u5219\u8bb0\u5f55Slowlog\uff0c\u5bf9\u5e94\u547d\u4ee4\u53ef\u4ee5\u67e5\u770bSlowlog\u547d\u4ee4\u3002"}),"\n",(0,i.jsx)(e.h2,{id:"cmd-\u901a\u7528\u5904\u7406\u6d41\u7a0b",children:"Cmd \u901a\u7528\u5904\u7406\u6d41\u7a0b"}),"\n",(0,i.jsx)(e.p,{children:"\u5728PikaClientConn\u7684\u901a\u7528\u5904\u7406\u6d41\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u4e0d\u540cCmd\u7684\u64cd\u4f5c\u90fd\u662f\u8c03\u7528\u5176\u57fa\u7c7b\u5904\u7406\u51fd\u6570Initial\u548cExecute\uff0cInitial\u548cExecute\u51fd\u6570\u5185\u90e8\u4f1a\u8c03\u7528\u7eaf\u865a\u51fd\u6570DoInitial\u548cDo\uff0c\u901a\u8fc7\u591a\u6001\u67e5\u627e\u6d3e\u751f\u7c7b\u7684\u771f\u6b63\u5b9e\u73b0\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",children:"class Cmd: public std::enable_shared_from_this<Cmd> {\n  virtual void DoInitial() = 0;\n  virtual void Do(std::shared_ptr<Partition> partition = nullptr) = 0;\n  void Cmd::Initial(const PikaCmdArgsType& argv,\n                  const std::string& table_name) {\n    argv_ = argv;\n    table_name_ = table_name;\n    res_.clear(); // Clear res content\n    Clear();      // Clear cmd, Derived class can has own implement\n    DoInitial();\n  };\n  void Cmd::Execute() {\n    ...\n    if (g_pika_conf->classic_mode()...) {\n      // invoke InternalProcessCommand and Cmd::Do\n      ProcessSinglePartitionCmd();\n    } else {\n      ...\n    }\n  };\n  void Cmd::InternalProcessCommand(std::shared_ptr<Partition> partition,\n    std::shared_ptr<SyncMasterPartition> sync_partition) {\n    slash::lock::MultiRecordLock record_lock(partition->LockMgr());\n    if (is_write()) {\n      record_lock.Lock(current_key());\n    }\n    // invoke Cmd::Do\n    DoCommand(partition, hint_keys);\n    DoBinlog(sync_partition);\n    if (is_write()) {\n      record_lock.Unlock(current_key());\n    }\n  }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u4efb\u4f55\u5177\u4f53\u7684\u547d\u4ee4\u7ee7\u627fCmd\u4e4b\u540e\uff0c\u9700\u8981\u5b9e\u73b0DoInitial\u548cDo \u4e24\u4e2a\u7eaf\u865a\u51fd\u6570\u3002\u5728\u4e4b\u540e\u7684\u901a\u7528\u5904\u7406\u6d41\u7a0b\u4e2dCmd\u4f1a\u505a\u76f8\u5e94\u7684\u8c03\u7528\u3002Cmd\u5bf9\u5916\u4e3b\u8981\u66b4\u9732Initial \u548cExecute \u4e24\u4e2a\u63a5\u53e3\u3002"}),"\n",(0,i.jsx)(e.p,{children:"1\uff0cInitial\u6e05\u9664\u524d\u4e00\u6b21\u8c03\u7528\u7684\u6b8b\u7559\u6570\u636e\uff0c\u540c\u65f6\u8c03\u7528DoInitial\u865a\u51fd\u6570\u3002"}),"\n",(0,i.jsx)(e.p,{children:"2\uff0cExecute\u5224\u65adpika\u8fd0\u884c\u6a21\u5f0f\uff0c\u4e3b\u8981\u8c03\u7528InternalProcessCommand\u3002"}),"\n",(0,i.jsx)(e.p,{children:"2.1\uff0c\u5bf9\u4e8e\u64cd\u4f5cDB \u548cBinlog \u8fd9\u4e24\u4e2a\u52a8\u4f5c\u52a0\u9501\uff0c\u786e\u4fddDB \u548cBinlog \u662f\u4e00\u81f4\u7684\u3002"}),"\n",(0,i.jsx)(e.p,{children:"2.2\uff0c\u8c03\u7528DoCommand\uff0c\u5176\u5185\u90e8\u4e3b\u8981\u8c03\u7528Do \u865a\u51fd\u6570\u3002"}),"\n",(0,i.jsx)(e.p,{children:"2.3\uff0c\u8c03\u7528DoBinlog\uff0c\u5c06\u547d\u4ee4\u5904\u7406\u540e\u5199\u5165Binlog\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"docommand",children:"DoCommand"}),"\n",(0,i.jsx)(e.p,{children:"DoCommand\u7684\u4f5c\u7528\u4e3b\u8981\u662f\u5c06\u547d\u4ee4\u5199\u5165DB\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",children:"void Cmd::DoCommand(\n    std::shared_ptr<Partition> partition, const HintKeys& hint_keys) {\n  if (!is_suspend()) {\n    partition->DbRWLockReader();\n  }\n  Do(partition);\n  if (!is_suspend()) {\n    partition->DbRWUnLock();\n  }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"BGSAVE\uff0cFLUSHALL\uff0cFLUSHDB\u9664\u4e86\u4e4b\u5916\uff0c\u5176\u4f59\u6240\u6709\u547d\u4ee4\u5728\u6267\u884cDo\u51fd\u6570\u4e4b\u524d\u90fd\u9700\u8981\u52a0\u8bfb\u9501\u3002\u5bf9\u4e8e\u8fd9\u51e0\u4e2a\u7279\u6b8a\u7684\u547d\u4ee4\u800c\u8a00\uff0c\u5b83\u4eec\u7684\u5171\u540c\u70b9\u662f\u90fd\u9700\u8981\u6e05\u9664\u6570\u636e\uff0c\u4e3a\u4fdd\u8bc1\u6e05\u9664\u8fc7\u7a0b\u6ca1\u6709\u5176\u5b83\u64cd\u4f5c\u540c\u65f6\u8fdb\u884c\uff0c\u9700\u8981\u5bf9\u76f8\u5e94\u7684\u5206\u7247\u6216\u8005db\u52a0\u4e0a\u5199\u9501\u963b\u585e\u5176\u4ed6\u64cd\u4f5c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u4eecDo\u7684\u51fd\u6570\u5b9e\u73b0\u5185\u90e8\u4f1a\u76f4\u63a5\u8c03DbRWLockWriter\uff0c\u963b\u585e\u5176\u5b83\u64cd\u4f5c\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"dobinlog",children:"DoBinlog"}),"\n",(0,i.jsx)(e.p,{children:"DoBinlog\u7684\u4f5c\u7528\u4e3b\u8981\u662f\u5c06\u547d\u4ee4\u5199\u5165Binlog\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",children:"void Cmd::DoBinlog(std::shared_ptr<SyncMasterPartition> partition) {\n  Status s = partition->ConsensusProposeLog(shared_from_this(),\n        std::dynamic_pointer_cast<PikaClientConn>(conn_ptr), resp_ptr);\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["\u901a\u8fc7 ",(0,i.jsx)(e.code,{children:"ConsensusProposeLog => InternalAppendBinlog => (std::shared_ptr<Binlog>)Logger()->Put(binlog)"})," \u4e00\u7cfb\u5217\u7684\u51fd\u6570\u8c03\u7528\uff0c\u6700\u7ec8\u8c03\u7528class Binlog\u7684Put\u63a5\u53e3\u5c06\uff0cbinlog \u5b57\u7b26\u4e32\u5199\u5165Binlog \u6587\u4ef6\u5f53\u4e2d\u3002"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"alt text",src:r(5334).A+"",width:"1070",height:"538"})}),"\n",(0,i.jsx)(e.p,{children:"Binlog\u6587\u4ef6\u662f\u7531\u4e00\u4e2a\u4e00\u4e2aBlocks\u7ec4\u6210\u7684\uff0c\u8fd9\u6837\u7ec4\u7ec7\u4e3b\u8981\u9632\u6b62binlog\u6587\u4ef6\u7684\u67d0\u4e00\u4e2a\u70b9\u635f\u574f\u9020\u6210\u6574\u4e2a\u6587\u4ef6\u4e0d\u53ef\u8bfb\u3002\u6bcf\u4e00\u4e2abinlog \u5b57\u7b26\u4e32\u5148\u5e8f\u5217\u5316\u6210BinlogItem \u7ed3\u6784\uff0c\u5982\u9ec4\u8272\u677f\u5757\u6240\u793a\uff0c\u7ec4\u6210BinlogItem\u4e4b\u540e\uff0c\u518d\u52a0\u4e0a8\u4e2abytes\uff08Length\uff0cTime\uff0cType\uff09\u7ec4\u6210\u5b8c\u6574\u7684\u53ef\u4ee5\u843d\u76d8\u7684\u6570\u636e\u3002"}),"\n",(0,i.jsx)(e.h2,{id:"\u547d\u4ee4\u6267\u884c\u8fc7\u7a0b\u7684\u5dee\u5f02\u5316\u5904\u7406",children:"\u547d\u4ee4\u6267\u884c\u8fc7\u7a0b\u7684\u5dee\u5f02\u5316\u5904\u7406"}),"\n",(0,i.jsx)(e.p,{children:"\u4ee5\u4e0a\u8ba8\u8bba\u4e86Pika\u7684\u901a\u7528\u5904\u7406\u6d41\u7a0b\uff0c\u6240\u6709\u547d\u4ee4\u7684\u5904\u7406\u90fd\u8981\u7ecf\u8fc7\u4ee5\u4e0a\u7684\u5904\u7406\u6d41\u7a0b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u547d\u4ee4\u7684\u5177\u4f53\u5904\u7406\u7ec6\u8282\uff0c\u7531\u5177\u4f53\u7684\u547d\u4ee4\u5b9e\u73b0\u51b3\u5b9a\u3002\u4e0b\u9762\u4ee5SetCmd\u4e3a\u4f8b\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",children:"class SetCmd : public Cmd {\n  virtual void DoInitial() override;\n  virtual void Do(std::shared_ptr<Partition> partition = nullptr);\n  void GetCmd::DoInitial() {\n    if (!CheckArg(argv_.size())) {\n      res_.SetRes(CmdRes::kWrongNum, kCmdNameGet);\n      return;\n    }\n    key_ = argv_[1];\n    return;\n  }\n  void SetCmd::Do(std::shared_ptr<Partition> partition) {\n    switch (condition_) {\n      ...\n      case SetCmd::kNX:\n        s = partition->db()->Setnx(key_, value_, &res, sec_);\n        break;\n      default:\n        s = partition->db()->Set(key_, value_);\n        break;\n    }\n    ...\n  }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"SetCmd\u7684DoInitial\u5b9e\u73b0\u4e3b\u8981\u521d\u59cb\u5316\u672a\u7ee7\u627f\u81eaCmd\u7684\u6570\u636e\u3002"}),"\n",(0,i.jsx)(e.p,{children:"SetCmd\u7684Do\u5b9e\u73b0\u4e3b\u8981\u662f\u6839\u636eSet\u547d\u4ee4\u7684\u51e0\u79cd\u53d8\u5f62\u8fdb\u884c\u4e0d\u540c\u7684Blackwidow\u63a5\u53e3\u8c03\u7528\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u4ee5\u4e0a\u6211\u4eec\u4ecb\u7ecd\u4e86Pika\u4e3b\u8981\u7684\u8bfb\u5199\u6d41\u7a0b\uff0c\u4f46\u662f\u5728\u4e00\u81f4\u6027\u573a\u666f\u4e0b\u6211\u4eec\u4e0d\u80fd\u591f\u5b8c\u5168\u6309\u7167\u4ee5\u4e0a\u7684\u8bfb\u5199\u8def\u5f84\u8fdb\u884c\u5904\u7406\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e00\u81f4\u6027\u573a\u666f\u4e0b\u6570\u636e\u7684\u8bfb\u5199\u6d41\u7a0b\u3002"}),"\n",(0,i.jsx)(e.h2,{id:"\u4e00\u81f4\u6027\u5b9e\u73b0\u4e2d\u7684\u6570\u636e\u5199\u5165",children:"\u4e00\u81f4\u6027\u5b9e\u73b0\u4e2d\u7684\u6570\u636e\u5199\u5165"}),"\n",(0,i.jsx)(e.p,{children:"\u4e00\u81f4\u6027\u573a\u666f\u4e0b\uff0c\u5e76\u4e0d\u662f\u50cf\u4e0a\u9762\u6240\u8bf4DoCommand \u548cDoBinlog \u5728\u4e00\u8d77\u6267\u884c\u7684\u3002\u4e00\u81f4\u6027\u573a\u666f\u4e0b\uff0c\u9700\u8981\u5728Leader\u7684Execute\u4e2d\u505aDoBinlog\uff0c\u7136\u540e\u5bf9\u4e8e\u8fd9\u6761Binlog\u5728\u5f97\u5230\u4e00\u5b9a\u6570\u76ee\u7684Follower\u786e\u8ba4\u4e4b\u540e\uff0c\u5229\u7528\u5b58\u4e0b\u6765\u7684MemLog::LogItem\u4e2d\u7684PikaClientConn \u548cCmd\u6307\u9488\uff0c\u8c03\u7528DoExecTask\uff0c\u5176\u4e2d\u518d\u6b21\u8c03\u7528Execute\uff0c\u8fdb\u884cDoCommand \u7684\u64cd\u4f5c\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u7531\u4e8e\u6027\u80fd\u8003\u8651\uff0cDoCommand\u7684\u64cd\u4f5c\u9700\u8981\u591a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\uff0c\u8fd9\u6837\u4e00\u6761Conn\u7684\u547d\u4ee4\u5c31\u6709\u53ef\u80fd\u88ab\u51e0\u4e2a\u7ebf\u7a0b\u540c\u65f6\u6267\u884c\uff0c\u90a3\u4e48\u5982\u4f55\u4fdd\u8bc1\u8fd0\u884c\u7ed3\u679c\u7684\u6b63\u786e\u6027\u5462\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u5728PikaClientConn \u4e2d\u8bb0\u5f55\u4e86\u5f53\u524dConn\u9700\u8981\u6267\u884c\u7684\u5b50\u547d\u4ee4\u7684\u4e2a\u6570\u548c\u6240\u6709\u5b50\u547d\u4ee4\u7684response\u6307\u9488\u6570\u7ec4\u3002\u4e00\u81f4\u6027\u573a\u666f\u4e2d\u4f1a\u5c06\u8be5\u5b50\u547d\u4ee4\u5bf9\u5e94\u7684resp_ptr\u6307\u9488\u4e0ePikaClientConn \u548cCmd \u5b58\u6210MemLog::LogItem\u5b58\u4e0b\u6765\uff0c\u5f53\u8fd9\u6761\u5b50\u547d\u4ee4\u5728\u5f97\u5230\u4e00\u5b9a\u6570\u76ee\u7684Follower\u786e\u8ba4\u4e4b\u540e\uff0c\u5c06\u5f53\u524dLogItem\u6267\u884c\u7684\u7ed3\u679c\u5199\u5165LogItem \u4e2d\u7684resp_ptr \u4e2d\u5e76\u4e14resp_num \u81ea\u51cf\uff0c\u6267\u884c\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u7684\u7ebf\u7a0b\u8d1f\u8d23\u5c06\u5176\u4ed6\u6240\u6709\u7ebf\u7a0b\u7684\u6267\u884c\u7ed3\u679c\u7ec4\u5408\uff0c\u8fd4\u56de\u5ba2\u6237\u7aef\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",children:"void PikaClientConn::BatchExecRedisCmd(\n    const std::vector<pink::RedisCmdArgsType>& argvs) {\n  resp_num.store(argvs.size());\n  for (size_t i = 0; i < argvs.size(); ++i) {\n    std::shared_ptr<std::string> resp_ptr = std::make_shared<std::string>();\n    resp_array.push_back(resp_ptr);\n    ExecRedisCmd(argvs[i], resp_ptr);\n  }\n  TryWriteResp();\n}\n\nvoid PikaClientConn::ExecRedisCmd(\n    const PikaCmdArgsType& argv, std::shared_ptr<std::string> resp_ptr) {\n  std::shared_ptr<Cmd> cmd_ptr = DoCmd(argv, opt, resp_ptr);\n  // level == 0 or (cmd error) or (is_read)\n  if (g_pika_conf->consensus_level() == 0\n      || !cmd_ptr->res().ok() || !cmd_ptr->is_write()) {\n    *resp_ptr = std::move(cmd_ptr->res().message());\n    resp_num--;\n  }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"1\uff0c\u8c03\u7528BatchExecRedisCmd\uff0c\u521d\u59cb\u5316resp_num\uff0c\u4e3a\u6b64\u6b21\u8bf7\u6c42\u5b50\u547d\u4ee4\u7684\u4e2a\u6570\u3002"}),"\n",(0,i.jsx)(e.p,{children:"2\uff0c\u521d\u59cb\u5316resp_ptr\uff0c\u5b58\u5165PikaClientConn\u6307\u9488\u6570\u7ec4\uff0c\u4f20\u5165ExecRedisCmd\u3002"}),"\n",(0,i.jsx)(e.p,{children:"3\uff0c\u5728ExecRedisCmd\u4e2d\uff0c\u8c03\u7528DoCmd\uff0c\u5982\u679c\u8fd4\u56de\u6b63\u5e38\uff0c\u5219\u7b49\u5f85Follower\u786e\u8ba4\uff0c\u518d\u6267\u884cDoCommand\u3002\u5982\u679c\u8fd4\u56de\u5f02\u5e38\uff0c\u76f4\u63a5\u6807\u8bb0\u5f53\u524d\u5b50\u547d\u4ee4\u5f02\u5e38\uff0c\u5e76\u4e14resp_num \u81ea\u51cf\uff0c\u5982\u679c\u662fPikaClientConn \u662f\u5355\u6761\u547d\u4ee4\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u5019\u8c03\u7528BatchExecRedisCmd\u4e2d\u7684TryWriteResp \u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u5ba2\u6237\u7aef\u4e86\uff0c\u6ca1\u6709\u5fc5\u8981\u540c\u6b65\u5230\u4ece\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",children:"void PikaClientConn::DoExecTask(void* arg) {\n  cmd_ptr->Execute();\n  *resp_ptr = std::move(cmd_ptr->res().message());\n  conn_ptr->resp_num--;\n  conn_ptr->TryWriteResp();\n}\n\nvoid PikaClientConn::TryWriteResp() {\n  int expected = 0;\n  if (resp_num.compare_exchange_strong(expected, -1)) {\n    for (auto& resp : resp_array) {\n      WriteResp(std::move(*resp));\n    }\n    resp_array.clear();\n    NotifyEpoll(true);\n  }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"1\uff0c\u5982\u679cDoCmd\u8fd4\u56de\u6b63\u5e38\uff0c\u4e00\u81f4\u6027\u6a21\u5757\u4f1a\u6700\u7ec8\u5bf9\u4e8e\u6bcf\u4e00\u6761\u5b50\u547d\u4ee4\u8c03\u7528\u4e00\u6b21DoExecTask\u3002"}),"\n",(0,i.jsx)(e.p,{children:"2\uff0c\u6bcf\u6b21\u5904\u7406\u5b50\u547d\u4ee4\u90fd\u5c1d\u8bd5TryWriteResp\uff0c\u53ea\u6709\u5f53\u524dresp_num \u662f0 \u624d\u53ef\u4ee5\u6574\u5408PikaClientConn\u4e2d\u6240\u6709\u5b50\u547d\u4ee4\u6267\u884c\u7ed3\u679c\uff0c\u901a\u77e5WorkerThread\u5199\u56de\u5ba2\u6237\u7aef\u3002"}),"\n",(0,i.jsx)(e.h2,{id:"reference",children:"Reference"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/Qihoo360/pika/tree/v3.3.4",children:"https://github.com/Qihoo360/pika/tree/v3.3.4"})})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},5334:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/image-1-b89be591bc8c74504d87cca233c6c56a.png"},2280:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/image-aad65eec86e42083a83018a4357d882b.png"},8453:(n,e,r)=>{r.d(e,{R:()=>o,x:()=>d});var i=r(6540);const s={},t=i.createContext(s);function o(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);